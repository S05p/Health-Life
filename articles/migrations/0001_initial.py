# Generated by Django 4.2.7 on 2024-06-30 10:26

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('revise_time', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default=None, max_length=50)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('comment_count', models.IntegerField(default=0)),
                ('popular_article', models.CharField(blank=True, default=False, max_length=20, null=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, default='', max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=30)),
                ('report_title', models.CharField(default=None, max_length=50)),
                ('report_content', ckeditor_uploader.fields.RichTextUploadingField(default=' ')),
                ('report_user_nickname', models.CharField(default=None, max_length=15)),
                ('report_article_pk', models.IntegerField()),
                ('reason', models.CharField(max_length=500)),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='report', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_time', models.DateTimeField(auto_now_add=True)),
                ('revise_time', models.DateTimeField(auto_now=True)),
                ('content', models.CharField(max_length=1000)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
                ('articles', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='articles.articles')),
                ('like_user', models.ManyToManyField(related_name='like_comments', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='articles.comment')),
            ],
        ),
        migrations.AddField(
            model_name='articles',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='articles.category'),
        ),
        migrations.AddField(
            model_name='articles',
            name='like_user',
            field=models.ManyToManyField(related_name='like_articles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='articles',
            name='unlike_user',
            field=models.ManyToManyField(related_name='unlike_articles', to=settings.AUTH_USER_MODEL),
        ),
    ]
